version: '3.4'

networks:
  mynekonetwork-dev:
    driver: bridge
    ipam:
      config:
        - subnet: 172.22.0.0/16

services:
  nekospace.api:
    image: ${DOCKER_REGISTRY-}nekospaceapi
    depends_on:
        - "postgres_db"
    container_name: nekospace.api
    ports:
        - "2082:80"
        - "2083:443"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ASPNETCORE_Kestrel__Certificates__Default__Password=NekoTestPass123
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/nekospacetestcert.pfx
    volumes:
     - ./https:/https:ro
      # - ~/.aspnet/https:/https:ro
      #- APPDATA\microsoft\UserSecrets\:/root/.microsoft/usersecrets
    build:
      context: ..
      dockerfile: NekoSpace.API/Dockerfile
    networks:
        - mynekonetwork-dev


  postgres_db:
    image: postgres:latest
    ports:
      - "5434:5432"
    restart: always
    volumes:
      - pgdata:/var/lib/postgresql/data
      - pgconf:/etc/postgresql
      - pglog:/var/log/postgresql
    environment:
        POSTGRES_DB: "anilist_db"
        POSTGRES_USER: "neko"
        POSTGRES_PASSWORD: "mya"
    networks:
        - mynekonetwork-dev

  elasticsearch:
   container_name: elasticsearch
   image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
   ports:
    - "9200:9200"
   volumes:
    - elasticsearch-data:/usr/share/elasticsearch/data
   restart: always
   environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
   ulimits:
    memlock:
        soft: -1
        hard: -1
   networks:
        mynekonetwork-dev:
            ipv4_address: 172.22.0.4

#  kibana:
#  container_name: kibana
#  image: docker.elastic.co/kibana/kibana:7.10.2
#  volumes:
#     - kibana-data:/usr/share/kibana/data
#  ports:
#   - "5601:5601"
#  depends_on:
#   - elasticsearch
#  environment:
#     - ELASTICSEARCH_URL=http://localhost:9201 
#  networks:
#     - mynekonetwork-dev

volumes:
  pgdata:
    driver: local
  pgconf:
    driver: local
  pglog:
    driver: local
  elasticsearch-data:
    driver: local
  kibana-data:
    driver: local