services:
  elasticsearch:
    container_name: elasticsearch
    environment:
      discovery.type: single-node
      xpack.security.enabled: "false"
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
    networks:
      mynekonetwork-dev:
        ipv4_address: 172.22.0.4
    ports:
    - mode: ingress
      target: 9200
      published: 9200
      protocol: tcp
    restart: always
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
    - type: volume
      source: elasticsearch-data
      target: /usr/share/elasticsearch/data
      volume: {}
  nekospace.api:
    build:
      context: C:\Users\artwa\Desktop\SpaceNeko
      dockerfile: NekoSpace.API/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: NekoSpace.API
      target: base
    container_name: nekospace.api
    depends_on:
      postgres_db:
        condition: service_started
    entrypoint:
    - tail
    - -f
    - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_Kestrel__Certificates__Default__Password: NekoTestPass123
      ASPNETCORE_Kestrel__Certificates__Default__Path: /https/nekospacetestcert.pfx
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      ASPNETCORE_URLS: https://+:443;http://+:80
      DOTNET_USE_POLLING_FILE_WATCHER: "1"
      NUGET_FALLBACK_PACKAGES: /.nuget/fallbackpackages
    image: nekospaceapi:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /.nuget/packages
        --additionalProbingPath /.nuget/fallbackpackages  "/app/bin/Debug/net7.0/NekoSpace.API.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      mynekonetwork-dev:
        ipv4_address: 172.22.0.3
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    - mode: ingress
      target: 80
      published: 2082
      protocol: tcp
    - mode: ingress
      target: 443
      protocol: tcp
    - mode: ingress
      target: 443
      published: 2083
      protocol: tcp
    tty: true
    volumes:
    - type: bind
      source: C:\Program Files (x86)\Microsoft Visual Studio\Shared\NuGetPackages
      target: /.nuget/fallbackpackages
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\artwa\.nuget\packages\
      target: /.nuget/packages
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\HotReload
      target: /HotReloadAgent
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\HotReloadProxy\linux-x64\net7.0
      target: /HotReloadProxy
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\TokenService.Proxy\linux-x64\net7.0
      target: /TokenService.Proxy
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\artwa\Desktop\SpaceNeko\NekoSpace.API
      target: /app
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\artwa\AppData\Roaming/ASP.NET/Https
      target: /home/app/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\artwa\AppData\Roaming/Microsoft/UserSecrets
      target: /home/app/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\artwa\Desktop\SpaceNeko\docker-compose\https
      target: /https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\artwa\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\artwa\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\artwa\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\artwa\Desktop\SpaceNeko
      target: /src
      bind:
        create_host_path: true
  postgres_db:
    environment:
      POSTGRES_DB: anilist_db
      POSTGRES_PASSWORD: mya
      POSTGRES_USER: neko
    image: postgres:latest
    networks:
      mynekonetwork-dev: null
    ports:
    - mode: ingress
      target: 5432
      published: 5434
      protocol: tcp
    restart: always
    volumes:
    - type: volume
      source: pgdata
      target: /var/lib/postgresql/data
      volume: {}
    - type: volume
      source: pgconf
      target: /etc/postgresql
      volume: {}
    - type: volume
      source: pglog
      target: /var/log/postgresql
      volume: {}
networks:
  mynekonetwork-dev:
    name: dockercompose15754460507279810455_mynekonetwork-dev
    driver: bridge
    ipam:
      config:
      - subnet: 172.22.0.0/16
volumes:
  elasticsearch-data:
    name: dockercompose15754460507279810455_elasticsearch-data
    driver: local
  pgconf:
    name: dockercompose15754460507279810455_pgconf
    driver: local
  pgdata:
    name: dockercompose15754460507279810455_pgdata
    driver: local
  pglog:
    name: dockercompose15754460507279810455_pglog
    driver: local