name: dockercompose17823545797208730646
services:
  nekospace.api:
    build:
      context: C:\Users\Niko\source\repos\NekoSpace\NekoSpaceList
      dockerfile: NekoSpace.API/Dockerfile
    container_name: nekospace.api
    depends_on:
      postgres_db:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_Kestrel__Certificates__Default__Password: pass123
      ASPNETCORE_Kestrel__Certificates__Default__Path: /https/NekoSpace.API.pfx
      ASPNETCORE_URLS: https://+:443;http://+:80
    image: nekospaceapi
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    - mode: ingress
      target: 80
      published: "2082"
      protocol: tcp
    - mode: ingress
      target: 443
      protocol: tcp
    - mode: ingress
      target: 443
      published: "2083"
      protocol: tcp
    volumes:
    - type: bind
      source: C:\Users\Niko\.aspnet\https
      target: /https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Niko\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Niko\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
  postgres_db:
    environment:
      POSTGRES_DB: anilist_db
      POSTGRES_PASSWORD: mya
      POSTGRES_USER: neko
    image: postgres:latest
    networks:
      default: null
    ports:
    - mode: ingress
      target: 5432
      published: "5434"
      protocol: tcp
    restart: always
    volumes:
    - type: volume
      source: pgdata
      target: /var/lib/postgresql/data
      volume: {}
    - type: volume
      source: pgconf
      target: /etc/postgresql
      volume: {}
    - type: volume
      source: pglog
      target: /var/log/postgresql
      volume: {}
networks:
  default:
    name: dockercompose17823545797208730646_default
volumes:
  pgconf:
    name: dockercompose17823545797208730646_pgconf
    driver: local
  pgdata:
    name: dockercompose17823545797208730646_pgdata
    driver: local
  pglog:
    name: dockercompose17823545797208730646_pglog
    driver: local