name: dockercompose3293424445778129702
services:
  nekospace.api:
    build:
      context: C:\Users\Niko\source\repos\NekoSpaceList
      dockerfile: NekoSpaceList/Dockerfile2
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: NekoSpace.API
    container_name: nekospace.api
    depends_on:
      postgres_db:
        condition: service_started
    entrypoint:
    - tail
    - -f
    - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      ASPNETCORE_URLS: https://+:443;http://+:80
      DOTNET_USE_POLLING_FILE_WATCHER: "1"
      NUGET_FALLBACK_PACKAGES: /root/.nuget/fallbackpackages
    image: nekospaceapi:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages
        --additionalProbingPath /root/.nuget/fallbackpackages  "/app/bin/Debug/net6.0/NekoSpace.API.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      mynekonetwork-dev: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    - mode: ingress
      target: 80
      published: "8081"
      protocol: tcp
    - mode: ingress
      target: 443
      protocol: tcp
    - mode: ingress
      target: 443
      published: "8088"
      protocol: tcp
    tty: true
    volumes:
    - type: bind
      source: C:\Users\Niko\source\repos\NekoSpaceList\NekoSpaceList
      target: /app
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Niko\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Niko\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Niko\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Program Files (x86)\Microsoft Visual Studio\Shared\NuGetPackages
      target: /root/.nuget/fallbackpackages
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Niko\.nuget\packages\
      target: /root/.nuget/packages
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Niko\source\repos\NekoSpaceList
      target: /src
      bind:
        create_host_path: true
  postgres_db:
    environment:
      POSTGRES_DB: anilist_db
      POSTGRES_PASSWORD: mya
      POSTGRES_USER: neko
    image: postgres:latest
    networks:
      mynekonetwork-dev: null
    ports:
    - mode: ingress
      target: 5432
      published: "5434"
      protocol: tcp
    restart: always
    volumes:
    - type: volume
      source: pgdata
      target: /var/lib/postgresql/data
      volume: {}
    - type: volume
      source: pgconf
      target: /etc/postgresql
      volume: {}
    - type: volume
      source: pglog
      target: /var/log/postgresql
      volume: {}
networks:
  mynekonetwork-dev:
    name: dockercompose3293424445778129702_mynekonetwork-dev
    driver: bridge
volumes:
  pgconf:
    name: dockercompose3293424445778129702_pgconf
    driver: local
  pgdata:
    name: dockercompose3293424445778129702_pgdata
    driver: local
  pglog:
    name: dockercompose3293424445778129702_pglog
    driver: local